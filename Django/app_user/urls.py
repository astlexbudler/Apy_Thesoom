

from django.urls import path
from . import views as v


urlpatterns = [

    # 메인 페이지
    # 상단에 이미지 캐로셀이 있어야함. 이미지는 정적 이미지를 사용해서 3개 ~ 5개정도의 이미지를 표시하는 캐로셀 구현. 높이는 500px로 고정.
    # 이미지 캐로셀 아래에는 검색창이 있어야함. 검색 창에는 PLACE_NAME을 검색. 카테고리를 체크하는 체크박스도 있어야함.
    # 카테고리 체크는 아무 역할도 하지 않도록 구현. 실제 장소에는 카테고리가 없음. 카테고리는 임의로 3개 이상을 만들어서 체크박스로 표시.(디자인용으로 그냥 만들어도 됨)
    # 검색 버튼을 누리면, 메인 페이지에 REQUEST GET 방식으로, search, category 파라미터를 넘겨서 검색 결과를 표시.
    # 페이지 설정 불필요. 검색 결과는 모두 표시하고, 각 PLACE 검색 결과는 대표 이미지가 포함된 카드 형태로 표시되어야함.
    # 메인 페이지에 표시할 장소들은 status가 active인 장소들만 표시되어야함.
    # ACCOUNT.is_superuser가 True인 경우, 상단에 장소 등록 버튼이 있어야함. 장소 등록 버튼을 누르면, 장소 등록 페이지로 이동.
    path('', v.user_index, name='user_index'),

    # 로그인 페이지
    # 배경에 전체 이미지를 넣어서 이미지가 전체 화면을 채우도록 구현. 이미지는 정적 이미지를 사용. hero 방식과 carousel 방식 중 하나를 선택하여 구현.
    # 1. hero 방식: 가로 사이즈가 3000px 이상인 이미지를 사용하고, 이미지가 오른쪽으로 슬라이드 되도록 구현. interval은 5초로 설정. 무한 반복. 이미지는 약간의 블러 효과를 줌.
    # 2. carousel 방식: 이미지는 3개 ~ 5개 정도를 사용하고, 이미지가 좌우로 슬라이드 되도록 구현. interval은 5초로 설정. 무한 반복. 이미지는 약간의 블러 효과를 줌.
    # 로그인 창은 이메일, 비밀번호, 로그인, 회원가입, 계정 찾기 버튼이 있어야함.
    # 로그인 세션은 별도의 만료 기간 없이, 계속 유지되도록(기본값) 설정.
    path('login', v.user_login, name='user_login'),

    # 로그아웃
    # 페이지는 아니며, Django 에서 제공하는 logout 을 사용 후, 로그인 페이지로 리다이렉트
    path('logout', v.user_logout, name='user_logout'),

    # 회원가입 페이지
    # 흰색 배경.
    # 회원가입 폼에는 이메일(아이디), 비밀번호, 비밀번호 확인, 이름, 전화번호, 회원가입 버튼이 있어야함. 비밀번호는 8자 이상이어야하고, 비밀번호 확인과 일치해야함.
    # 이메일 인증 절차 불필요. 회원가입 버튼을 누르면, 회원가입이 완료되고, 로그인 페이지로 이동.
    # 이메일 중복 확인 필요. 이메일 중복 시 label 근처에 중복 메시지를 표시. 중복 메시지는 빨간색으로 표시. 중복되지 않을 경우, 사용 가능 메시지를 표시.
    # 비밀번호도 마찬가지로 사용 가능 또는 불가능 메세지를 label 근처에 표시. passwordRegex를 사용하여 비밀번호가 사용 가능한지 확인.
    path('signup', v.user_signup, name='user_signup'),

    # 계정 찾기 페이지
    # 흰색 배경.
    # 계정 찾기 폼에는 이메일, 계정 찾기 버튼이 있어야함. 계정 찾기 버튼을 누르면, 해당 이메일로 가입된 계정이 있는지 확인하고, 결과를 표시.
    # 실제로 이메일 전송은 하지 않아도 됨. 이메일이 존재하지 않을 경우, 해당 이메일로 가입된 계정이 없습니다. 메시지를 표시.
    # 이메일이 존재할 경우, 해당 이메일로 가입된 계정이 있습니다. 메시지를 표시. 이후 비밀번호 초기화 페이지로 이동.
    path('find', v.user_find, name='user_find'),

    # 비밀번호 초기화 페이지
    # 흰색 배경.
    # 비밀번호 초기화 폼에는 이메일, 비밀번호, 비밀번호 확인, 초기화 버튼이 있어야함. 비밀번호는 8자 이상이어야하고, 비밀번호 확인과 일치해야함.
    # 이메일 input은 readonly로 설정되어야함. 이메일은 계정 찾기 페이지에서 넘어온 이메일이어야함.
    # 초기화 버튼을 누르면, 비밀번호가 초기화되고, 로그인 페이지로 이동.
    path('reset', v.user_reset, name='user_reset'),

    # 프로필
    # 로그인 페이지와 동일한 배경 이미지를 사용. hero 방식과 carousel 방식 중 하나를 선택하여 구현.
    # 프로필 창에는 이메일, 이름, 전화번호, 비밀번호 변경, 회원 탈퇴 버튼이 있어야함.
    # 각 요소들(이름, 전화번호, 비밀번호 변경) label 옆에 수정 버튼을 두어서, 수정 버튼을 누르면 해당 요소를 수정할 수 있는 modal이 나타나도록 구현.
    # 버튼은 button 또는 a 태그를 사용. 버튼에는 아이콘을 사용. 아이콘은 flaticon의 rr 속성을 사용.
    # 회원 탈퇴 버튼을 누르면, 회원 탈퇴 확인 modal이 나타나도록 구현. 확인 버튼을 누르면, 회원 탈퇴가 완료되고, 로그인 페이지로 이동.
    # 회원 탈퇴 시 모든 사용자 데이터가 같이 삭제되도록 구현. 회원 탈퇴 시, logout을 수행하고, 메인 페이지로 이동되도록 구현.
    # 결제 기록 확인 페이지 이동 버튼이 있어야함. (/purchase/history)
    path('profile', v.user_profile, name='user_profile'),

    # 이용약관
    path('terms', v.user_terms, name='user_terms'),

    # 연락처
    path('contact', v.user_contact, name='user_contact'),

]